steps:
  # 1. Gradle을 사용하여 JAR 파일 빌드
  #    - name: 'gcr.io/cloud-builders/gradle'은 Gradle 빌드 작업을 위한 Cloud Build 빌더입니다.
  #    - args: ['bootJar', '-x', 'test']는 'bootJar' 태스크를 실행하고, 테스트를 건너뛰도록 합니다.
  - name: 'gcr.io/cloud-builders/gradle'
    args: ['bootJar', '-x', 'test']

  # 2. Docker 이미지 빌드
  #    - name: 'gcr.io/cloud-builders/docker'는 Docker 이미지 빌드 작업을 위한 빌더입니다.
  #    - args: ['build', '-t', 'gcr.io/$PROJECT_ID/my-spring-app:$COMMIT_SHA', '.']는 Docker 이미지를 빌드하고 태그를 지정합니다.
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/my-spring-app:$COMMIT_SHA', '.']

images:
  # 빌드된 최종 이미지를 Artifact Registry에 저장하도록 설정
  - 'gcr.io/$PROJECT_ID/my-spring-app:$COMMIT_SHA'

# Cloud Run에 배포하는 단계 (선택 사항)
# 이 단계는 Cloud Run 서비스를 생성하거나 업데이트합니다.
# gcloud run deploy
# ...